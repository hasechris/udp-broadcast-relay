---
name: reuseable - build container

on:
  workflow_call:
    inputs:
      artifact-name:
        required: true
        type: string
      registry_image:
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_TOKEN:
        required: true



jobs:
  build_container:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ["amd64", "386", "arm_v6_arm1176jzf", "arm_v7", "arm64_v8"]
        include:
          - arch: amd64
            zig_buildos: "linux"
            buildx_buildarch: "amd64"
        
          - arch: "386"
            zig_buildos: "linux"
            buildx_buildarch: "386"
          
          - arch: "arm_v6_arm1176jzf"
            zig_buildos: "linux"
            buildx_buildarch: "arm/v6"
          
          - arch: "arm_v7"
            zig_buildos: "linux"
            buildx_buildarch: "arm/v7"
          
          - arch: "arm64_v8"
            zig_buildos: "linux"
            buildx_buildarch: "arm64/v8"
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry_image }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - uses: actions/checkout@v4
      
      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}-${{ matrix.arch }}
      
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.zig_buildos }}/${{ matrix.buildx_buildarch }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile.${{ inputs.artifact-name }}
          outputs: type=image,name=${{ inputs.registry_image }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests-${{ inputs.artifact-name }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
...